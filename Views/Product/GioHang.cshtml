@{
    ViewBag.Title = "GioHang";
    var gh = Session["Giohang"] as List<dotMVC.Models.GioHang>;
}

<div class="container-fluid py-5">
    <div class="container py-5">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Hình</th>
                        <th scope="col">Tên</th>
                        <th scope="col">Giá</th>
                        <th scope="col">Màu</th>
                        <th scope="col">Kích thước</th>
                        <th scope="col">Số lượng</th>
                        <th scope="col">Tổng tiền</th>
                        <th scope="col">Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @if (gh != null && gh.Any())
                    {
                        foreach (var i in gh)
                        {
                            <tr data-id="@i.mahh" data-size="@i.Idsize" data-color="@i.Idmau">
                                <th scope="row">
                                    <div class="d-flex align-items-center">
                                        <img src="~/assets/img/@i.hinh" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="">
                                    </div>
                                </th>
                                <td>
                                    <p class="mb-0 mt-4">@i.tenhh</p>
                                </td>
                                @if (i.giamgia != 0)
                                {
                                    <td>
                                        <p class="mb-0 mt-4">@i.giamgia</p>
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <p class="mb-0 mt-4">@i.dongia</p>
                                    </td>
                                }
                                <td>
                                    <p class="mb-0 mt-4">@i.mausac</p>
                                </td>
                                <td>
                                    <p class="mb-0 mt-4">@i.size</p>
                                </td>
                                <td>
                                    <div class="input-group quantity mt-4" style="width: 100px;">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-minus rounded-circle bg-light border" onclick="CapnhatGh(@i.mahh, @i.Idsize, @i.Idmau, -1)">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="form-control form-control-sm text-center border-0" value="@i.soluong" readonly>
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-plus rounded-circle bg-light border" onclick="CapnhatGh(@i.mahh, @i.Idsize, @i.Idmau, 1)">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <p class="mb-0 mt-4" id="total-@i.mahh">@string.Format("{0:N0}", i.tinhtongtien())</p>
                                </td>
                                <td>
                                    <button class="btn btn-md rounded-circle bg-light border mt-4" onclick="removeItem(@i.mahh, @i.Idsize, @i.Idmau)">
                                        <i class="fa fa-times text-danger"></i>
                                    </button>

                                </td>
                            </tr>
                        }
                    }
                    else
                    {

                        <p colspan="" class="text-center">Giỏ hàng của bạn trống</p>

                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row g-4 justify-content-end">
        <div class="col-8"></div>
        <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
            <div class="bg-light rounded">
                <div class="p-4">
                    <h1 class="display-6 mb-4"><span class="fw-normal"></span></h1>
                    <div class="d-flex justify-content-between mb-4">
                        <h5 class="mb-0 me-4">Số tiền cần thanh toán:</h5>
                        <p class="mb-0" id="total-amount">$96.00</p> <!-- Added id for displaying total amount -->
                    </div>
                </div>
                @if (Request.IsAuthenticated)
                {
                    <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4"
                            type="button"
                            onclick="window.location.href='https://localhost:44388/thanhtoan/ThanhtoanSL'">
                        Proceed Checkout
                    </button>
                }
                else
                {
                    <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4"
                            type="button"
                            disabled>
                        Please Log In to Checkout
                    </button>
                }
            </div>
        </div>
    </div>


</div>

@section scripts
{
    <script>
        var totalAmount = 0; // Biến lưu tổng số tiền

        $(document).ready(function() {
            // Tính tổng số tiền khi trang được tải
            calculateTotalAmount();
            // Cập nhật số lượng sản phẩm trong giỏ hàng
            updateCartItemCount();
        });

        // Cập nhật số lượng sản phẩm trong giỏ hàng trên biểu tượng giỏ hàng
        function updateCartItemCount() {
            var itemCount = $("tbody tr").length;
            $("#cartItemCount").text(itemCount);
        }

        function calculateTotalAmount() {
            totalAmount = 0; // Reset tổng số tiền
            // Duyệt qua từng mục trong giỏ hàng và tính tổng số tiền
            $("tbody tr").each(function() {
                var price = parseFloat($(this).find("td:nth-child(3)").text());
                var quantity = parseInt($(this).find("input[type='text']").val());
                totalAmount += price * quantity;
            });
            // Cập nhật số tiền hiển thị
            $("#total-amount").text(formatPrice(totalAmount));
        }

       function CapnhatGh(productId, size, color, change) {
    var row = document.querySelector(`tr[data-id='${productId}'][data-size='${size}'][data-color='${color}']`);
    var quantityInput = row.querySelector("input[type='text']");
    var currentQuantity = parseInt(quantityInput.value);
    var newQuantity = currentQuantity + change;

    if (newQuantity < 1) {
        return; // Do not allow quantity less than 1
    }

    // Send AJAX request to update the server-side data
    $.ajax({
        url: '@Url.Action("CapnhatGh", "Product")',
        type: 'POST',
        data: {
            id: productId,
            size: size,
            color: color,
            quantity: newQuantity
        },
        success: function(response) {
            if (response.success) {
                quantityInput.value = newQuantity;
                var price = parseFloat(row.querySelector("td:nth-child(3)").innerText);
                var totalCell = row.querySelector(`#total-${productId}`);
                totalCell.innerText = formatPrice(price * newQuantity);
                calculateTotalAmount(); // Cập nhật tổng số tiền
                updateCartItemCount(); // Cập nhật số lượng sản phẩm
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: response.message
                });
            }
        }
    });
}

        function removeItem(productId, size, color) {
            var row = document.querySelector(`tr[data-id='${productId}'][data-size='${size}'][data-color='${color}']`);

            Swal.fire({
                title: 'Bạn có chắc chắn muốn xóa sản phẩm này?',
                text: "Bạn sẽ không thể hoàn tác điều này!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Vâng, xóa nó!',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send AJAX request to remove the item from the cart
                    $.ajax({
                        url: '@Url.Action("XoaGh", "Product")',
                        type: 'POST',
                        data: {
                            id: productId,
                            size: size,
                            color: color
                        },
                        success: function(response) {
                            if (response.success) {
                                row.remove();
                                Swal.fire(
                                    'Đã xóa!',
                                    'Sản phẩm đã được xóa khỏi giỏ hàng.',
                                    'success'
                                );
                                calculateTotalAmount(); // Cập nhật tổng số tiền sau khi xóa
                                updateCartItemCount(); // Cập nhật số lượng sản phẩm
                            } else {
                                Swal.fire(
                                    'Lỗi!',
                                    'Xóa sản phẩm thất bại.',
                                    'error'
                                );
                            }
                        }
                    });
                }
            });
        }

        function formatPrice(value) {
            return value % 1 === 0 ? value.toFixed(0) : value.toFixed(2);
        }
    </script>
}

