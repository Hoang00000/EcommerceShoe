@model IEnumerable<dotMVC.Models.UserPurchaseStatisticsViewModel>

@{
    ViewBag.Title = "Thống Kê Mua Hàng của Người Dùng";
    var data = Model ?? new List<dotMVC.Models.UserPurchaseStatisticsViewModel>();
}

<h2>Thống Kê Mua Hàng của Người Dùng</h2>

<div>
    <select id="filterType" onchange="filterData()">
        <option value="day">Ngày</option>
        <option value="month">Tháng</option>
        <option value="year">Năm</option>
    </select>

    <input type="date" id="filterDate" />
    <input type="month" id="filterMonth" style="display:none;" />
    <input type="number" id="filterYear" min="2000" max="2100" style="display:none;" />

    <button onclick="applyFilter()">Áp Dụng</button>
</div>

<div id="chartContainer" style="height: 370px; width: 100%;"></div>
<div id="legendContainer" style="margin-top: 20px;"></div>

@section Scripts {
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script type="text/javascript">
        function filterData() {
            var filterType = document.getElementById('filterType').value;
            document.getElementById('filterDate').style.display = filterType === 'day' ? 'inline' : 'none';
            document.getElementById('filterMonth').style.display = filterType === 'month' ? 'inline' : 'none';
            document.getElementById('filterYear').style.display = filterType === 'year' ? 'inline' : 'none';
        }

        function applyFilter() {
            var filterType = document.getElementById('filterType').value;
            var filterValue;

            if (filterType === 'day') {
                filterValue = document.getElementById('filterDate').value;
            } else if (filterType === 'month') {
                filterValue = document.getElementById('filterMonth').value;
            } else {
                filterValue = document.getElementById('filterYear').value;
            }

            window.location.href = '@Url.Action("Index", "TkKhachHang", new { area = "Admin" })' + '?filterType=' + filterType + '&filterValue=' + filterValue;
        }

        window.onload = function () {
            var chartData = [];
            var totalQuantity = @data.Sum(item => item.TotalQuantity); // Calculate totalQuantity in JavaScript

            @foreach (var item in data)
            {
                <text>
                    var percentage = (@item.TotalQuantity / totalQuantity * 100).toFixed(2);
                    chartData.push({ y: @item.TotalQuantity, label: "@item.Email", color: getRandomColor(), indexLabel: percentage + "%" });
                </text>;
            }

            var chart = new CanvasJS.Chart("chartContainer", {
                theme: "light2",
                animationEnabled: true,
                title: {
                    text: "Top Người Dùng Theo Số Lượng Sản Phẩm Mua"
                },
                legend: {
                    cursor: "pointer",
                    itemclick: explodePie
                },
                data: [{
                    type: "pie",
                    indexLabelPlacement: "inside",
                    indexLabelFontColor: "white", // Ensure the label is visible on the colored segment
                    toolTipContent: "<b>{label}</b>: {y} ({indexLabel})",
                    dataPoints: chartData
                }]
            });

            chart.render();

            function explodePie(e) {
                if (typeof (e.dataPoint.exploded) === "undefined" || !e.dataPoint.exploded) {
                    e.dataPoint.exploded = true;
                } else {
                    e.dataPoint.exploded = false;
                }
                e.chart.render();
            }

            // Custom legend
            var legendContainer = document.getElementById("legendContainer");
            var legendHTML = "";
            chartData.forEach(function (dataPoint, index) {
                legendHTML += "<div style='display: inline-block; margin-right: 10px;'>";
                legendHTML += "<div style='width: 20px; height: 20px; background-color: " + dataPoint.color + "; display: inline-block;'></div>";
                legendHTML += " " + dataPoint.label;
                legendHTML += "</div>";
            });
            legendContainer.innerHTML = legendHTML;

            // Function to generate random colors
            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }
        }
    </script>
}

